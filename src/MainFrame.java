import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class MainFrame extends JFrame {

    private JPanel mainContext;
    private JTabbedPane tabbedPane1;
    private JPanel create;
    private JPanel transform;
    private JPanel workPart;
    private JPanel konusP;
    private JPanel piramidP;
    private JTextField h1TF;
    private JTextField rTF;
    private JButton makeObjButton;
    private JTextField h2TF;
    private JTextField aTF;
    private JTextField kTF;
    private JPanel buffPanel;
    private JPanel viewPanel;
    private JPanel Other;
    private JTextField wightCount;
    private JButton applyButton;
    private JTextField tPosX;
    private JTextField tSizeX;
    private JTextField tRotX;
    private JTextField tPosY;
    private JTextField tSizeY;
    private JTextField tRotY;
    private JTextField tPosZ;
    private JTextField tSizeZ;
    private JTextField tRotZ;
    private JButton transformApplyButton;
    public MainFrame.PaintPanel paintPanel;

    public MainFrame() {
        super();
        init();
    }


    private void init() {
        this.setContentPane(mainContext);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setSize(1000, 500);
        this.setVisible(true);
        GridBagConstraints gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 1;
        gridBagConstraints.gridwidth = 1;
        gridBagConstraints.weightx = 1;
        gridBagConstraints.weighty = 1;
        paintPanel = new MainFrame.PaintPanel();
        viewPanel.add(paintPanel, gridBagConstraints);
        paintPanel.setVisible(true);
        makeObjButton.addActionListener(new MakeObjButtonListener());
        applyButton.addActionListener(new ApplyButtonListener());
        transformApplyButton.addActionListener(new TransformApplyListener());
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here

    }


    private class MakeObjButtonListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            try {
                SimpleStore.Points.clear();
                SimpleStore.Lines.clear();
                double h1 = Double.parseDouble(h1TF.getText());
                double r = Double.parseDouble(rTF.getText());
                int k = Integer.parseInt(kTF.getText());
                double h2 = Double.parseDouble(h2TF.getText());
                double a = Double.parseDouble(aTF.getText());
                MainObj.createObj(h1, r, k, h2, a);
                paintPanel.repaint();
            } catch (Exception exception) {
                System.out.print("Неправильно введены данные");
            }
        }
    }

    private class ApplyButtonListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            try {

                int count = Integer.parseInt(wightCount.getText());
                Painter.wightCount = count;
                paintPanel.repaint();
            } catch (Exception exception) {
                System.out.print("Неправильно введены данные");
            }
        }
    }

    private class TransformApplyListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            double[][] outputV = new double[3][3];
            try {
                outputV[0][0] = Double.parseDouble(tPosX.getText());
                outputV[0][1] = Double.parseDouble(tPosY.getText());
                outputV[0][2] = Double.parseDouble(tPosZ.getText());

                outputV[1][0] = Double.parseDouble(tSizeX.getText());
                outputV[1][1] = Double.parseDouble(tSizeY.getText());
                outputV[1][2] = Double.parseDouble(tSizeZ.getText());

                outputV[2][0] = Double.parseDouble(tRotX.getText());
                outputV[2][1] = Double.parseDouble(tRotY.getText());
                outputV[2][2] = Double.parseDouble(tRotZ.getText());
                Controller.transform(outputV);
                repaint();
            } catch (Exception exception) {
                System.out.print(exception);
            }
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainContext = new JPanel();
        mainContext.setLayout(new GridBagLayout());
        tabbedPane1 = new JTabbedPane();
        tabbedPane1.setTabLayoutPolicy(0);
        tabbedPane1.setTabPlacement(2);
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridheight = 2;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        mainContext.add(tabbedPane1, gbc);
        create = new JPanel();
        create.setLayout(new GridBagLayout());
        create.setEnabled(true);
        create.setToolTipText("");
        tabbedPane1.addTab("Создание объекта", create);
        workPart = new JPanel();
        workPart.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        create.add(workPart, gbc);
        konusP = new JPanel();
        konusP.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        workPart.add(konusP, gbc);
        konusP.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.black), "Конус", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        final JLabel label1 = new JLabel();
        label1.setText("Высота (h1):");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(0, 0, 1, 0);
        konusP.add(label1, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        konusP.add(spacer1, gbc);
        h1TF = new JTextField();
        h1TF.setText("10");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        konusP.add(h1TF, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Радиус (R):");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(0, 0, 1, 0);
        konusP.add(label2, gbc);
        rTF = new JTextField();
        rTF.setText("3");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        konusP.add(rTF, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("Аппроксимация (k):");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(0, 0, 1, 0);
        konusP.add(label3, gbc);
        kTF = new JTextField();
        kTF.setText("10");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        konusP.add(kTF, gbc);
        piramidP = new JPanel();
        piramidP.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        workPart.add(piramidP, gbc);
        piramidP.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.black), "Пирамида", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        final JLabel label4 = new JLabel();
        label4.setText("Высота (h2):");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(0, 0, 1, 0);
        piramidP.add(label4, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        piramidP.add(spacer2, gbc);
        h2TF = new JTextField();
        h2TF.setText("15");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        piramidP.add(h2TF, gbc);
        final JLabel label5 = new JLabel();
        label5.setText("Длинна стороны основания (a):");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(0, 0, 1, 0);
        piramidP.add(label5, gbc);
        aTF = new JTextField();
        aTF.setText("3");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        piramidP.add(aTF, gbc);
        buffPanel = new JPanel();
        buffPanel.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        create.add(buffPanel, gbc);
        makeObjButton = new JButton();
        makeObjButton.setText("Создать");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        buffPanel.add(makeObjButton, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        buffPanel.add(spacer3, gbc);
        final JPanel spacer4 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.VERTICAL;
        buffPanel.add(spacer4, gbc);
        transform = new JPanel();
        transform.setLayout(new GridBagLayout());
        transform.setForeground(new Color(-16777216));
        tabbedPane1.addTab("Трансформация объекта", transform);
        final JLabel label6 = new JLabel();
        label6.setText("Перемещение");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        transform.add(label6, gbc);
        final JLabel label7 = new JLabel();
        label7.setText("Масштабирование");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        transform.add(label7, gbc);
        final JLabel label8 = new JLabel();
        label8.setText("Поворот");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        transform.add(label8, gbc);
        final JLabel label9 = new JLabel();
        label9.setHorizontalAlignment(10);
        label9.setHorizontalTextPosition(11);
        label9.setText("X");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        transform.add(label9, gbc);
        tPosX = new JTextField();
        tPosX.setText("0");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        transform.add(tPosX, gbc);
        tSizeX = new JTextField();
        tSizeX.setText("1");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        transform.add(tSizeX, gbc);
        tRotX = new JTextField();
        tRotX.setText("0");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        transform.add(tRotX, gbc);
        tPosY = new JTextField();
        tPosY.setText("0");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        transform.add(tPosY, gbc);
        tSizeY = new JTextField();
        tSizeY.setText("1");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        transform.add(tSizeY, gbc);
        tRotY = new JTextField();
        tRotY.setText("0");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        transform.add(tRotY, gbc);
        final JLabel label10 = new JLabel();
        label10.setText("Y");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        transform.add(label10, gbc);
        final JLabel label11 = new JLabel();
        label11.setText("Z");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        transform.add(label11, gbc);
        tPosZ = new JTextField();
        tPosZ.setText("0");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        transform.add(tPosZ, gbc);
        tSizeZ = new JTextField();
        tSizeZ.setText("1");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        transform.add(tSizeZ, gbc);
        tRotZ = new JTextField();
        tRotZ.setText("0");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        transform.add(tRotZ, gbc);
        final JPanel spacer5 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.VERTICAL;
        transform.add(spacer5, gbc);
        transformApplyButton = new JButton();
        transformApplyButton.setText("применить");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.gridwidth = 4;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        transform.add(transformApplyButton, gbc);
        Other = new JPanel();
        Other.setLayout(new GridBagLayout());
        tabbedPane1.addTab("Стороннее", Other);
        final JLabel label12 = new JLabel();
        label12.setText("Масштабирование координатной сетки");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        Other.add(label12, gbc);
        wightCount = new JTextField();
        wightCount.setText("30");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        Other.add(wightCount, gbc);
        applyButton = new JButton();
        applyButton.setText("Применить");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        Other.add(applyButton, gbc);
        final JPanel spacer6 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.VERTICAL;
        Other.add(spacer6, gbc);
        viewPanel = new JPanel();
        viewPanel.setLayout(new GridBagLayout());
        viewPanel.setBackground(new Color(-1));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.gridheight = 2;
        gbc.weightx = 0.9;
        gbc.weighty = 0.9;
        gbc.fill = GridBagConstraints.BOTH;
        mainContext.add(viewPanel, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainContext;
    }

    public static class PaintPanel extends JPanel {
        public PaintPanel() {
            super();
            setBackground(Color.white);
        }

        @Override
        public void paintComponent(Graphics g1) {
            super.paintComponent(g1);
            Painter.drawCord(g1);
            Graphics2D g = (Graphics2D) g1;
            Painter.drawLines(g);
        }
    }
}
